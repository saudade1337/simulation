from __future__ import annotations
import time
from typing import List, Callable

from world.map import Map


class Simulation:
    """
    –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–∏–º—É–ª—è—Ü–∏–∏.
    –£–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –º–∏—Ä–∞, –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–∞–∂–¥–æ–≥–æ —Ö–æ–¥–∞, –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –∏ –ª–æ–≥–∞–º–∏.
    """

    def __init__(self, world: Map):
        self.world = world  # –ò–≥—Ä–æ–≤–∞—è –∫–∞—Ä—Ç–∞
        self.turn = 0  # –°—á—ë—Ç—á–∏–∫ —Ö–æ–¥–æ–≤
        self.is_running = False  # –§–ª–∞–≥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞/–ø–∞—É–∑—ã
        self.init_actions: List[Callable] = []  # –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        self.turn_actions: List[Callable] = []  # –î–µ–π—Å—Ç–≤–∏—è, –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–µ –∫–∞–∂–¥—ã–π —Ö–æ–¥

    # ----------------------------
    # –ú–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–º—É–ª—è—Ü–∏–µ–π
    # ----------------------------

    def start(self, delay: float = 1.0):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—É—é —Å–∏–º—É–ª—è—Ü–∏—é —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –º–µ–∂–¥—É —Ö–æ–¥–∞–º–∏"""
        self.is_running = True
        print('üöÄ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞!\n')
        self.run_init_actions()

        while self.is_running:
            self.next_turn()
            time.sleep(delay)

    def pause(self):
        """–ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–∏–º—É–ª—è—Ü–∏—é"""
        self.is_running = False
        print('‚è∏Ô∏è –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')

    # ----------------------------
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    # ----------------------------

    def next_turn(self):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–¥–∏–Ω —Ö–æ–¥ —Å–∏–º—É–ª—è—Ü–∏–∏"""
        self.turn += 1
        log: List[str] = []

        print(f'\n====== –•–û–î {self.turn} =======')

        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è, –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –∫–∞–∂–¥—ã–π —Ö–æ–¥
        for action in self.turn_actions:
            action(self.world, log)

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞—Ä—Ç—ã
        print(self.world.render())

        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è
        print('\nüìú –î–µ–π—Å—Ç–≤–∏—è –∑–∞ —Ö–æ–¥:')
        if log:
            for line in log:
                print("  ‚Ä¢", line)
        else:
            print('  (–ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ)')

        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f'–í—Å–µ–≥–æ —Å—É—â–Ω–æ—Å—Ç–µ–π: {len(self.world.entities())}')

    # ----------------------------
    # –î–µ–π—Å—Ç–≤–∏—è
    # ----------------------------

    def run_init_actions(self):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è, –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º —Å–∏–º—É–ª—è—Ü–∏–∏"""
        for action in self.init_actions:
            action(self.world, [])
        print('‚úÖ –ú–∏—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!')

    def add_init_action(self, action: Callable):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–π"""
        self.init_actions.append(action)

    def add_turn_action(self, action: Callable):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ, –≤—ã–ø–æ–ª–Ω—è–µ–º–æ–µ –∫–∞–∂–¥—ã–π —Ö–æ–¥"""
        self.turn_actions.append(action)