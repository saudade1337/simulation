from __future__ import annotations
import random
from typing import List

from entities.creatures import Creature
from entities.static_objects import Grass
from world.map import Map


def move_all_creatures(world: Map, log: List[str]):
    """–í—Å–µ –∂–∏–≤—ã–µ —Å—É—â–µ—Å—Ç–≤–∞ –¥–µ–ª–∞—é—Ç —Å–≤–æ–π —Ö–æ–¥"""
    creatures = [e for e in world.entities() if isinstance(e, Creature)]

    for creature in creatures:
        if creature.is_alive:
            creature.make_move(world, log)
        else:
            world.remove_entity(creature)
            log.append(f'‚ò†Ô∏è {creature.symbol} —É–º–µ—Ä –Ω–∞ {creature.pos}')


def spawn_grass_randomly(world: Map, log: List[str], chance: float = 0.003):
    """–°–ª—É—á–∞–π–Ω–æ –≤—ã—Ä–∞—Å—Ç–∞–µ—Ç –Ω–æ–≤–∞—è —Ç—Ä–∞–≤–∞"""
    empty_cells = [
        (x, y)
        for x in range(world.width)
        for y in range(world.height)
        if world.is_empty((x, y))
    ]

    for pos in empty_cells:
        if random.random() < chance:
            world.add_entity(Grass(pos))
            log.append(f'üå± –ù–∞ {pos} –≤—ã—Ä–æ—Å–ª–∞ –Ω–æ–≤–∞—è —Ç—Ä–∞–≤–∞!')


def cleanup_dead(world: Map, log: List[str]):
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –º–µ—Ä—Ç–≤—ã–µ —Å—É—â–µ—Å—Ç–≤–∞"""
    for entity in list(world.entities()):
        if isinstance(entity, Creature) and not entity.is_alive:
            world.remove_entity(entity)
            log.append(f'üíÄ {entity.symbol} —É–¥–∞–ª—ë–Ω —Å –∫–∞—Ä—Ç—ã (–º–µ—Ä—Ç–≤)')


def world_statistics(world: Map, log: List[str]):
    """–í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ –º–∏—Ä–µ"""
    total = len(world.entities())
    herbivores = sum(1 for e in world.entities() if e.symbol == 'üêÑ')
    predators = sum(1 for e in world.entities() if e.symbol == 'ü¶Å')
    grass = sum(1 for e in world.entities() if e.symbol == 'üåø')

    log.append(f"üìä –í—Å–µ–≥–æ: {total}, üêÑ={herbivores}, ü¶Å={predators}, üåø={grass}")